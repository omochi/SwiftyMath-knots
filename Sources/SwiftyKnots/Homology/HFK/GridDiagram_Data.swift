//
//  GridDiagram_Examples.swift
//  SwiftyKnots
//
//  Created by Taketo Sano on 2019/07/17.
//
//  Data generated using GridLink
//  http://homepages.math.uic.edu/~culler/gridlink/
//

import Foundation

extension GridDiagram {
    public static func load(_ name: String) -> GridDiagram? {
        loadTable()
        if let code = _table[name] {
            let (Os, Xs) = (points(code["O"]!), points(code["X"]!))
            return GridDiagram(Os, Xs)
        } else {
            return nil
        }
    }
    
    private static func points(_ seq: [Int]) -> [Point] {
        return seq.enumerated().map { (x, y) in
            Point(2 * x + 1, 2 * y + 1)
        }
    }
}

private typealias CodeTable = [String: [String : [Int]]]

private func loadTable() {
    if _table.isEmpty {
        _table = CodeTable.loadJSON(_jsonString)!
    }
}

private var _table: CodeTable = [:]
private let _jsonString = """
{
"0_1": {"X": [1,0], "O": [0,1]},
"3_1": {"X": [0,4,3,2,1], "O": [3,2,1,0,4]},
"4_1": {"X": [1,0,3,2,4,5], "O": [4,2,1,5,0,3]},
"5_1": {"X": [0,6,5,4,3,2,1], "O": [5,4,3,2,1,0,6]},
"5_2": {"X": [5,4,6,3,2,1,0], "O": [3,1,2,0,5,6,4]},
"6_1": {"X": [1,7,0,4,2,5,6,3], "O": [5,2,3,1,6,0,4,7]},
"6_2": {"X": [2,1,3,0,4,7,6,5], "O": [0,4,7,6,2,5,3,1]},
"6_3": {"X": [2,4,3,0,6,7,1,5], "O": [0,1,7,5,2,4,6,3]},
"7_1": {"X": [1,0,8,7,6,5,4,3,2], "O": [8,7,6,5,4,3,2,1,0]},
"7_2": {"X": [0,5,6,3,4,1,8,7,2], "O": [4,1,2,0,8,7,6,3,5]},
"7_3": {"X": [1,0,4,8,6,7,5,3,2], "O": [8,7,6,5,3,4,2,1,0]},
"7_4": {"X": [7,5,3,4,2,0,6,1,8], "O": [0,2,1,6,8,5,3,7,4]},
"7_5": {"X": [2,1,0,8,7,5,6,4,3], "O": [5,8,7,6,4,1,3,2,0]},
"7_6": {"X": [2,1,6,0,4,3,8,7,5], "O": [0,4,3,5,2,7,6,1,8]},
"7_7": {"X": [0,3,5,7,2,1,4,8,6], "O": [4,8,1,3,0,6,7,5,2]},
"8_1": {"X": [0,5,6,7,4,3,8,1,9,2], "O": [4,2,3,1,9,5,0,6,7,8]},
"8_2": {"X": [5,4,3,2,1,0,7,6,8,9], "O": [3,2,1,0,8,6,5,9,4,7]},
"8_3": {"X": [1,8,9,2,5,4,7,0,6,3], "O": [4,0,7,6,3,8,2,5,1,9]},
"8_4": {"X": [1,8,9,2,5,4,7,0,6,3], "O": [4,0,7,6,3,8,2,5,1,9]},
"8_5": {"X": [0,9,3,8,4,7,6,5,2,1], "O": [8,4,7,6,2,5,3,1,0,9]},
"8_6": {"X": [4,2,9,8,6,7,5,0,1,3], "O": [9,8,7,5,4,3,1,2,6,0]},
"8_7": {"X": [4,8,3,2,9,7,6,0,5,1], "O": [0,2,1,7,6,5,4,8,3,9]},
"8_8": {"X": [4,9,8,3,0,6,5,1,2,7], "O": [8,6,2,7,5,4,3,9,0,1]},
"8_9": {"X": [0,7,9,8,5,2,3,1,4,6], "O": [8,5,6,4,1,7,0,9,2,3]},
"8_10": {"X": [3,6,4,2,1,9,5,8,7,0], "O": [9,2,1,0,8,7,3,6,4,5]},
"8_11": {"X": [4,1,8,3,7,0,6,5,2,9], "O": [0,7,6,9,2,5,4,3,8,1]},
"8_12": {"X": [4,8,1,2,7,0,6,3,5,9], "O": [0,3,9,6,4,5,8,7,1,2]},
"8_13": {"X": [4,8,1,2,7,0,6,3,5,9], "O": [0,3,9,6,4,5,8,7,1,2]},
"8_14": {"X": [0,1,9,2,5,8,7,6,4,3], "O": [8,6,5,7,0,4,1,3,2,9]},
"8_15": {"X": [0,1,9,2,5,8,7,6,4,3], "O": [8,6,5,7,0,4,1,3,2,9]},
"8_16": {"X": [0,1,9,2,5,8,7,6,4,3], "O": [8,6,5,7,0,4,1,3,2,9]},
"8_17": {"X": [2,0,7,9,1,8,3,4,6,5], "O": [9,8,4,6,7,5,0,2,3,1]},
"8_18": {"X": [3,1,9,0,2,4,7,8,6,5], "O": [0,7,6,8,9,1,3,5,4,2]},
"8_19": {"X": [0,6,5,4,3,2,1], "O": [4,3,2,1,0,6,5]},
"8_20": {"X": [3,2,5,0,6,4,7,1], "O": [0,7,1,4,3,2,5,6]},
"8_21": {"X": [0,6,7,5,3,2,4,1], "O": [5,3,4,2,1,6,0,7]},
"9_1": {"X": [10,9,8,7,6,5,4,3,2,1,0], "O": [8,7,6,5,4,3,2,1,0,10,9]},
"9_2": {"X": [10,6,2,9,5,3,1,0,7,8,4], "O": [5,1,7,6,0,10,8,4,3,2,9]},
"9_3": {"X": [2,1,10,0,9,7,8,6,5,4,3], "O": [10,9,7,8,6,0,5,4,3,2,1]},
"9_4": {"X": [4,9,3,8,1,2,0,7,10,6,5], "O": [2,1,10,0,7,9,6,5,8,4,3]},
"9_5": {"X": [2,0,1,10,8,4,9,6,7,3,5], "O": [10,3,9,6,2,7,5,4,0,1,8]},
"9_6": {"X": [8,10,7,6,4,3,2,1,5,0,9], "O": [5,6,4,3,2,1,0,9,10,8,7]},
"9_7": {"X": [10,9,4,2,1,7,8,5,6,3,0], "O": [8,6,1,7,5,3,4,0,2,10,9]},
"9_8": {"X": [5,3,1,0,7,6,10,4,9,8,2], "O": [1,10,4,9,3,2,5,8,6,0,7]},
"9_9": {"X": [10,8,7,6,5,9,4,2,1,0,3], "O": [7,6,5,4,2,3,1,0,10,9,8]},
"9_10": {"X": [3,0,1,2,10,7,9,6,5,8,4], "O": [10,7,9,8,6,1,5,4,3,0,2]},
"9_11": {"X": [8,0,9,6,7,5,4,1,3,2,10], "O": [1,7,5,4,10,3,2,9,0,8,6]},
"9_12": {"X": [1,7,6,2,5,9,0,8,4,10,3], "O": [4,5,9,8,10,3,7,6,2,1,0]},
"9_13": {"X": [0,4,10,1,7,9,8,5,3,6,2], "O": [7,9,6,8,4,5,3,2,0,1,10]},
"9_14": {"X": [2,10,8,6,1,9,0,5,3,4,7], "O": [9,5,2,4,7,3,8,1,6,10,0]},
"9_15": {"X": [8,3,5,4,1,2,7,6,9,0,10], "O": [4,0,1,9,6,8,5,10,3,7,2]},
"9_16": {"X": [0,8,7,5,4,3,6,2,1,10,9], "O": [7,6,4,3,2,0,1,10,9,8,5]},
"9_17": {"X": [7,1,6,8,9,10,0,3,5,4,2], "O": [5,3,2,4,7,8,9,10,1,6,0]},
"9_18": {"X": [2,10,9,1,8,0,7,4,6,5,3], "O": [9,8,4,7,3,6,5,1,2,10,0]},
"9_19": {"X": [9,6,5,7,2,4,3,8,0,1,10], "O": [0,4,10,3,6,1,5,2,7,9,8]},
"9_21": {"X": [5,1,9,2,0,8,10,7,4,3,6], "O": [9,8,4,10,7,6,3,5,1,0,2]},
"9_22": {"X": [9,1,2,3,4,6,8,0,7,5,10], "O": [0,7,10,1,2,3,5,6,4,9,8]},
"9_23": {"X": [8,4,7,5,3,1,2,0,9,6,10], "O": [5,1,2,9,0,10,6,8,4,3,7]},
"9_24": {"X": [3,8,7,9,10,5,0,2,1,6,4], "O": [7,5,4,6,8,1,9,10,3,2,0]},
"9_25": {"X": [7,9,8,4,2,1,5,3,0,10,6], "O": [5,6,3,1,0,9,10,7,4,2,8]},
"9_26": {"X": [5,0,2,1,9,7,8,6,4,3,10], "O": [9,6,10,8,4,0,5,3,2,1,7]},
"9_27": {"X": [8,2,3,1,6,5,7,0,4,9,10], "O": [5,9,0,10,4,2,3,6,8,1,7]},
"9_28": {"X": [2,1,9,8,0,4,5,3,7,6,10], "O": [0,5,7,3,6,10,2,1,4,9,8]},
"9_29": {"X": [7,0,8,9,2,10,3,1,6,4,5], "O": [4,6,1,7,0,8,9,5,3,10,2]},
"9_30": {"X": [2,3,6,4,10,8,7,5,1,9,0], "O": [9,1,2,7,5,6,3,0,10,4,8]},
"9_31": {"X": [9,6,4,0,3,5,1,10,8,7,2], "O": [5,3,2,8,10,0,9,7,4,1,6]},
"9_32": {"X": [0,9,3,8,5,2,1,10,6,4,7], "O": [8,6,10,1,9,0,7,4,3,2,5]},



"10_128": {"X": [6,4,3,2,5,1,7,0,8], "O": [2,1,0,7,8,6,5,4,3]},
"10_152": {"X": [6,3,1,2,0,10,9,8,7,5,4], "O": [2,0,8,10,9,7,6,5,4,3,1]},
"10_154": {"X": [9,7,8,6,4,3,5,2,1,0], "O": [6,1,5,3,2,0,9,7,8,4]},

}
"""

// use
// /X=(\[[0-9,]+\]);   O=(\[[0-9,]+\])/{"X": $1, "O": $2}/
