//
//  GridDiagram_Examples.swift
//  SwiftyKnots
//
//  Created by Taketo Sano on 2019/07/17.
//
//  Data generated using GridLink
//  http://homepages.math.uic.edu/~culler/gridlink/
//

import Foundation

extension GridDiagram {
    public static func load(_ name: String) -> GridDiagram? {
        loadTable()
        if let code = _table[name] {
            let (Os, Xs) = (points(code["O"]!), points(code["X"]!))
            return GridDiagram(Os, Xs)
        } else {
            return nil
        }
    }
    
    private static func points(_ seq: [Int]) -> [Point] {
        return seq.enumerated().map { (x, y) in
            Point(2 * x + 1, 2 * y + 1)
        }
    }
}

private typealias CodeTable = [String: [String : [Int]]]

private func loadTable() {
    if _table.isEmpty {
        _table = CodeTable.loadJSON(_jsonString)!
    }
}

private var _table: CodeTable = [:]
private let _jsonString = """
{
"0_1": {"X": [1,0], "O": [0,1]},
"3_1": {"X": [0,4,3,2,1], "O": [3,2,1,0,4]},
"4_1": {"X": [1,0,3,2,4,5], "O": [4,2,1,5,0,3]},
"5_1": {"X": [0,6,5,4,3,2,1], "O": [5,4,3,2,1,0,6]},
"5_2": {"X": [5,4,6,3,2,1,0], "O": [3,1,2,0,5,6,4]},
"6_1": {"X": [1,7,0,4,2,5,6,3], "O": [5,2,3,1,6,0,4,7]},
"6_2": {"X": [2,1,3,0,4,7,6,5], "O": [0,4,7,6,2,5,3,1]},
"6_3": {"X": [2,4,3,0,6,7,1,5], "O": [0,1,7,5,2,4,6,3]},
"7_1": {"X": [1,0,8,7,6,5,4,3,2], "O": [8,7,6,5,4,3,2,1,0]},
"7_2": {"X": [0,5,6,3,4,1,8,7,2], "O": [4,1,2,0,8,7,6,3,5]},
"7_3": {"X": [1,0,4,8,6,7,5,3,2], "O": [8,7,6,5,3,4,2,1,0]},
"7_4": {"X": [7,5,3,4,2,0,6,1,8], "O": [0,2,1,6,8,5,3,7,4]},
"7_5": {"X": [2,1,0,8,7,5,6,4,3], "O": [5,8,7,6,4,1,3,2,0]},
"7_6": {"X": [2,1,6,0,4,3,8,7,5], "O": [0,4,3,5,2,7,6,1,8]},
"7_7": {"X": [0,3,5,7,2,1,4,8,6], "O": [4,8,1,3,0,6,7,5,2]},
"8_1": {"X": [0,5,6,7,4,3,8,1,9,2], "O": [4,2,3,1,9,5,0,6,7,8]},
"8_2": {"X": [5,4,3,2,1,0,7,6,8,9], "O": [3,2,1,0,8,6,5,9,4,7]},
"8_3": {"X": [1,8,9,2,5,4,7,0,6,3], "O": [4,0,7,6,3,8,2,5,1,9]},
"8_4": {"X": [1,8,9,2,5,4,7,0,6,3], "O": [4,0,7,6,3,8,2,5,1,9]},
"8_5": {"X": [0,9,3,8,4,7,6,5,2,1], "O": [8,4,7,6,2,5,3,1,0,9]},
"8_6": {"X": [4,2,9,8,6,7,5,0,1,3], "O": [9,8,7,5,4,3,1,2,6,0]},
"8_7": {"X": [4,8,3,2,9,7,6,0,5,1], "O": [0,2,1,7,6,5,4,8,3,9]},
"8_8": {"X": [4,9,8,3,0,6,5,1,2,7], "O": [8,6,2,7,5,4,3,9,0,1]},
"8_9": {"X": [0,7,9,8,5,2,3,1,4,6], "O": [8,5,6,4,1,7,0,9,2,3]},
"8_10": {"X": [3,6,4,2,1,9,5,8,7,0], "O": [9,2,1,0,8,7,3,6,4,5]},
"8_11": {"X": [4,1,8,3,7,0,6,5,2,9], "O": [0,7,6,9,2,5,4,3,8,1]},
"8_12": {"X": [4,8,1,2,7,0,6,3,5,9], "O": [0,3,9,6,4,5,8,7,1,2]},
"8_13": {"X": [4,8,1,2,7,0,6,3,5,9], "O": [0,3,9,6,4,5,8,7,1,2]},
"8_14": {"X": [0,1,9,2,5,8,7,6,4,3], "O": [8,6,5,7,0,4,1,3,2,9]},
"8_15": {"X": [0,1,9,2,5,8,7,6,4,3], "O": [8,6,5,7,0,4,1,3,2,9]},
"8_16": {"X": [0,1,9,2,5,8,7,6,4,3], "O": [8,6,5,7,0,4,1,3,2,9]},
"8_17": {"X": [2,0,7,9,1,8,3,4,6,5], "O": [9,8,4,6,7,5,0,2,3,1]},
"8_18": {"X": [3,1,9,0,2,4,7,8,6,5], "O": [0,7,6,8,9,1,3,5,4,2]},
"8_19": {"X": [0,6,5,4,3,2,1], "O": [4,3,2,1,0,6,5]},
"8_20": {"X": [3,2,5,0,6,4,7,1], "O": [0,7,1,4,3,2,5,6]},
"8_21": {"X": [0,6,7,5,3,2,4,1], "O": [5,3,4,2,1,6,0,7]},
"10_128": {"X": [6,4,3,2,5,1,7,0,8], "O": [2,1,0,7,8,6,5,4,3]}
}
"""
